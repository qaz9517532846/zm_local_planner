#!/usr/bin/env python
PACKAGE = "zm_local_planner"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("map_frame", str_t, 0, "Map frame of the robot.", "map")
gen.add("heading_lookahead", double_t, 0, "lookahead distance of the robot to target in meters", 0.8, 0, 5)
gen.add("start_angle", double_t, 0, "The robot start point angle setting in map", 0, -3.14, 3.14)

gen.add("max_x_vel", double_t, 0, "Maximum x velocity of the robot in meters/sec", 0.5, 0, 5)
gen.add("min_x_vel", double_t, 0, "Minimum x velocity of the robot in meters/sec", -0.5, -5, 0)
gen.add("acc_x_vel", double_t, 0, "Limit x acceleration velocity of the robot in meters/sec^2", 0.2, 0, 5)

gen.add("max_y_vel", double_t, 0, "Maximum x velocity of the robot in meters/sec", 0.5, 0, 5)
gen.add("min_y_vel", double_t, 0, "Minimum x velocity of the robot in meters/sec", -0.5, -5, 0)
gen.add("acc_y_vel", double_t, 0, "Limit y acceleration velocity of the robot in meters/sec^2", 0.2, 0, 5)

gen.add("max_vel_theta", double_t, 0, "Maximum angular velocity of the robot for in-place rotation in radians/sec",  0.5, 0, 5)
gen.add("min_vel_theta", double_t, 0, "Minimum angular velocity of the robot for in-place rotation in radians/sec", -0.5, -5, 0)
gen.add("acc_theta_vel", double_t, 0, "Limit theta acceleration velocity of the robot in meters/sec^2", 0.2, 0, 5)

gen.add("xy_goal_tolerance", double_t, 0, "Allowed Euclidean distance of the robot to goal in meters", 0.1, 0, 1)
gen.add("yaw_goal_tolerance", double_t, 0, "Allowed orientation error of the robot for in-place rotation in radians", 0.1, 0, 1)
gen.add("yaw_moving_tolerance", double_t, 0, "Allowed orientation error of the robot for in-place rotation when moving in radians", 0.5, 0, 1)

gen.add("timeout", double_t, 0, "TF transform timeout.", 0.5, 0, 5)

exit(gen.generate(PACKAGE, "zm_local_planner", "ZMLocalPlanner"))